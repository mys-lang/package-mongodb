from argparse import Parser
from bson import Array
from bson import Document
from bson import Int32
from bson import Int64
from bson import String
from random.pseudo import randint
from . import Client

func main(argv: [string]):
    parser = Parser()
    parser.add_option("--limit", default="500")
    args = parser.parse(argv)
    limit = i64(args.value_of("--limit"))

    client = Client()
    client.connect()

    print("Databases:")

    for database in client.list_databases():
        print(" ", database)
        print("   ", "Collections:")

        for collection in client.list_collections(database):
            print("     ", collection)

    client.insert("test",
                  "inventory",
                  Array([
                      Document([
                          ("x", Int64(i64(randint(0, 1000)))),
                          ("y", Int64(i64(randint(0, 1000)))),
                          ("z", Int64(i64(randint(0, 1000))))
                      ])
                  ]))

    print("Documents:")
    filter = Document([("x", Document([("$gte", Int64(limit))]))])
    sort = Document([("x", Int32(1))])
    projection = Document([("_id", Int32(0)), ("x", Int32(1)), ("z", Int32(1))])
    batch = client.find("test", "inventory", filter, sort, projection)

    for document in batch.get("cursor").get("firstBatch").get_array():
        print(document)

    cursor_id = batch.get("cursor").get("id")

    while cursor_id.get_int64() != 0:
        batch = client.get_more("test", "inventory", cursor_id)
        cursor_id = batch.get("cursor").get("id")

        for document in batch.get("cursor").get("nextBatch").get_array():
            print(document)
